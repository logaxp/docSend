// const { PDFDocument } = window.PDFLab;

import { PDFDocument, rgb } from 'https://cdn.skypack.dev/pdf-lib';

const pdfUrl = '../software-development-proposal-template-1702352345704.pdf';
loadAndDisplayPdf(pdfUrl)
// C:\Users\TENE\Documents\Node Project\docsend\templates\custom\pdf\docsend-1703176734226-527858017.pdf

async function loadAndDisplayPdf(pdfUrl) {

    try {
        const response = await fetch(pdfUrl);
        const pdfBytes = await response.arrayBuffer();

        const pdfDoc = await PDFDocument.load(pdfBytes);

        // Check if there are pages in the document
        if (pdfDoc.getPageCount() === 0) {
          console.error('PDF does not contain any pages.');
          return;
        }

        // Display the first page in a canvas
        const canvas = document.createElement('canvas');
        const context = canvas.getContext('2d');

        const firstPage = pdfDoc.getPage()[0]; // Access the first page
        const viewport = firstPage.getViewport({ scale: 1.5 }); // Adjust as needed

        canvas.width = viewport.width;
        canvas.height = viewport.height;

        const renderContext = {
          canvasContext: context,
          viewport: viewport,
        };

        await firstPage.render(renderContext);

        const pdfContainer = document.getElementById('pdf-container');
        pdfContainer.innerHTML = ''; // Clear previous content
        pdfContainer.appendChild(canvas);

        // Modify the PDF (client-side)
        // For example, add a text annotation to the first page
        const text = 'Modified on client-side!';
        firstPage.drawText(text, {
          x: 50,
          y: 50,
          font: await pdfDoc.embedFont('Helvetica'),
          color: rgb(0, 0, 0),
        });

        // Save the modified PDF if needed
        // const modifiedPdfBytes = await pdfDoc.save();
        // sendToServer(modifiedPdfBytes); // Example: send to server
      } catch (error) {
        console.error('Error loading PDF:', error);
      }
  }




